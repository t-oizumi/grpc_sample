// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/hello.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Hello service

type HelloClient interface {
	SayHello(ctx context.Context, in *RequestStruct, opts ...grpc.CallOption) (*ReplyStruct, error)
}

type helloClient struct {
	cc *grpc.ClientConn
}

func NewHelloClient(cc *grpc.ClientConn) HelloClient {
	return &helloClient{cc}
}

func (c *helloClient) SayHello(ctx context.Context, in *RequestStruct, opts ...grpc.CallOption) (*ReplyStruct, error) {
	out := new(ReplyStruct)
	err := grpc.Invoke(ctx, "/proto.Hello/SayHello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Hello service

type HelloServer interface {
	SayHello(context.Context, *RequestStruct) (*ReplyStruct, error)
}

func RegisterHelloServer(s *grpc.Server, srv HelloServer) {
	s.RegisterService(&_Hello_serviceDesc, srv)
}

func _Hello_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Hello/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServer).SayHello(ctx, req.(*RequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hello_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Hello",
	HandlerType: (*HelloServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Hello_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/hello.proto",
}

func init() { proto1.RegisterFile("proto/hello.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 100 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0x48, 0xcd, 0xc9, 0xc9, 0xd7, 0x03, 0xb3, 0x85, 0x58, 0xc1, 0x94, 0x94, 0x10,
	0x44, 0xa6, 0xb8, 0xa4, 0xa8, 0x34, 0xb9, 0x04, 0x22, 0x65, 0x64, 0xcf, 0xc5, 0xea, 0x01, 0x52,
	0x29, 0x64, 0xc6, 0xc5, 0x11, 0x9c, 0x58, 0x09, 0x61, 0x8b, 0x40, 0x24, 0xf5, 0x82, 0x52, 0x0b,
	0x4b, 0x53, 0x8b, 0x4b, 0x82, 0xc1, 0x1a, 0xa4, 0x84, 0xe0, 0xa2, 0x05, 0x39, 0x95, 0x10, 0x31,
	0x25, 0x86, 0x24, 0x36, 0xb0, 0xa0, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x13, 0x51, 0x5f, 0xaa,
	0x77, 0x00, 0x00, 0x00,
}
