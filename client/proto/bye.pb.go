// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/bye.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/bye.proto
	proto/struct.proto
	proto/grpc-second.proto
	proto/grpc.proto
	proto/hello.proto

It has these top-level messages:
	RequestStruct
	ReplyStruct
	HelloRequest
	HelloReply
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Bye service

type ByeClient interface {
	SayBye(ctx context.Context, in *RequestStruct, opts ...grpc.CallOption) (*ReplyStruct, error)
}

type byeClient struct {
	cc *grpc.ClientConn
}

func NewByeClient(cc *grpc.ClientConn) ByeClient {
	return &byeClient{cc}
}

func (c *byeClient) SayBye(ctx context.Context, in *RequestStruct, opts ...grpc.CallOption) (*ReplyStruct, error) {
	out := new(ReplyStruct)
	err := grpc.Invoke(ctx, "/proto.Bye/SayBye", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Bye service

type ByeServer interface {
	SayBye(context.Context, *RequestStruct) (*ReplyStruct, error)
}

func RegisterByeServer(s *grpc.Server, srv ByeServer) {
	s.RegisterService(&_Bye_serviceDesc, srv)
}

func _Bye_SayBye_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestStruct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ByeServer).SayBye(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Bye/SayBye",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ByeServer).SayBye(ctx, req.(*RequestStruct))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bye_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Bye",
	HandlerType: (*ByeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayBye",
			Handler:    _Bye_SayBye_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/bye.proto",
}

func init() { proto1.RegisterFile("proto/bye.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 98 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0xaa, 0x4c, 0xd5, 0x03, 0xb3, 0x84, 0x58, 0xc1, 0x94, 0x94, 0x10, 0x44, 0xbc,
	0xb8, 0xa4, 0xa8, 0x34, 0xb9, 0x04, 0x22, 0x65, 0x64, 0xcd, 0xc5, 0xec, 0x54, 0x99, 0x2a, 0x64,
	0xc2, 0xc5, 0x16, 0x9c, 0x58, 0x09, 0x62, 0x89, 0x40, 0x24, 0xf4, 0x82, 0x52, 0x0b, 0x4b, 0x53,
	0x8b, 0x4b, 0x82, 0xc1, 0x8a, 0xa5, 0x84, 0xe0, 0xa2, 0x05, 0x39, 0x95, 0x10, 0x31, 0x25, 0x86,
	0x24, 0x36, 0xb0, 0xa0, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x50, 0xa0, 0x62, 0x9d, 0x71, 0x00,
	0x00, 0x00,
}
